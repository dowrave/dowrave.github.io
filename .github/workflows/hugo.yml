# GitHub Pages에 Hugo 사이트를 빌드하고 배포하기 위한 워크플로우
name: Deploy Hugo site to Pages

on:
  # 기본 브랜치(main)로 푸시할 때 실행
  push:
    branches:
      - main

  # Actions 탭에서 수동으로 실행 가능
  workflow_dispatch:

# GitHub Pages 배포를 위한 GITHUB_TOKEN 권한 설정
permissions:
  contents: read
  pages: write
  id-token: write

# 동시 배포 설정 - 진행 중인 배포는 취소하지 않고 완료되도록 함
concurrency:
  group: "pages"
  cancel-in-progress: false

# 기본 셸을 bash로 설정
defaults:
  run:
    shell: bash

jobs:
  # 빌드 작업
  build:
    runs-on: ubuntu-latest
    env:
      HUGO_VERSION: 0.145.0
      HUGO_ENVIRONMENT: production
      TZ: Asia/Seoul  # 한국 시간대로 설정
    steps:
      - name: Hugo CLI 설치
        run: |
          wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb \
          && sudo dpkg -i ${{ runner.temp }}/hugo.deb
      - name: Dart Sass 설치
        run: sudo snap install dart-sass
      - name: 저장소 체크아웃
        uses: actions/checkout@v4
        with:
          submodules: recursive  # 테마 등의 서브모듈도 함께 가져옴
          fetch-depth: 0
      - name: Pages 설정
        id: pages
        uses: actions/configure-pages@v5
      - name: Node.js 의존성 설치 (필요한 경우)
        run: "[[ -f package-lock.json || -f npm-shrinkwrap.json ]] && npm ci || true"
      - name: 캐시 복원
        id: cache-restore
        uses: actions/cache/restore@v4
        with:
          path: |
            ${{ runner.temp }}/hugo_cache
          key: hugo-${{ github.run_id }}
          restore-keys:
            hugo-
      - name: Hugo로 사이트 빌드
        run: |
          hugo \
            --gc \
            --minify \
            --baseURL "${{ steps.pages.outputs.base_url }}/" \
            --cacheDir "${{ runner.temp }}/hugo_cache"
      - name: 캐시 저장
        id: cache-save
        uses: actions/cache/save@v4
        with:
          path: |
            ${{ runner.temp }}/hugo_cache
          key: ${{ steps.cache-restore.outputs.cache-primary-key }}
      - name: 결과물 업로드
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./public

  # 배포 작업
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: GitHub Pages에 배포
        id: deployment
        uses: actions/deploy-pages@v4